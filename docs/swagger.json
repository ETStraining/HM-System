{
  "swagger": "2.0",
  "info": {
    "title": "Health Management System",
    "description": "An API for managing CareSync",
    "version": "1.0.0"
  },
  "host": "hm-system-923x.onrender.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "User sign up registration",
        "description": "Register a new user with required details.",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User registration details",
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Email or phone number already in use"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate user and provide JWT token.",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User login credentials",
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "summary": "User logout",
        "description": "Clear session and log out user.",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Logout success"
          }
        }
      }
    },
    "/contact-us/contact-us": {
      "post": {
        "summary": "Create a message to the administrator",
        "description": "The user can send a message to the health management administrator.",
        "tags": ["Contact-us"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/contact-us"
            },
            "required": true,
            "description": "Contact message data"
          }
        ],
        "responses": {
          "200": { "description": "Message sent successfully" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/contact-us/listMessage": {
      "get": {
        "summary": "List all user messages",
        "description": "Retrieve a list of all user messages from the database.",
        "tags": ["Contact-us"],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of messages",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contact-us"
              }
            }
          },
          "404": { "description": "No messages found" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/contact-us/delete/{id}": {
      "delete": {
        "summary": "Delete a message by ID",
        "description": "Delete a message by its ID.",
        "tags": ["Contact-us"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the message to delete",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Message deleted" },
          "404": { "description": "Message not found" }
        }
      }
    },
    "/departments": {
      "get": {
        "summary": "List of all departments",
        "description": "Retrieve the list of all departments from the database.",
        "tags": ["Department"],
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of all departments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/department"
              }
            }
          },
          "404": { "description": "Departments not found" },
          "500": { "description": "Internal server error" }
        }
      },
      "post": {
        "summary": "Create a new department",
        "description": "This route is used to create a new department in the clinic.",
        "tags": ["Department"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/department"
            },
            "description": "Department data to be created"
          }
        ],
        "responses": {
          "201": {
            "description": "Department created successfully",
            "schema": {
              "$ref": "#/definitions/department"
            }
          },
          "400": { "description": "Invalid input data" },
          "500": { "description": "Internal server error" }
        }
      },
      "put": {
        "summary": "Update a department",
        "description": "Update the details of an existing department by ID.",
        "tags": ["Department"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the department to update",
            "schema": { "type": "string" }
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/department"
            },
            "required": true,
            "description": "Updated department details"
          }
        ],
        "responses": {
          "200": { "description": "Department updated successfully" },
          "404": { "description": "Department not found" },
          "400": { "description": "Invalid input" }
        }
      },
      "delete": {
        "summary": "Delete a department",
        "description": "Delete a department from the database using its ID.",
        "tags": ["Department"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the department to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": { "description": "Department deleted successfully" },
          "404": { "description": "Department not found" },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/departments/{id}": {
      "get": {
        "summary": "Get a department by ID",
        "description": "Retrieve a department's details from the database using its unique ID.",
        "tags": ["Department"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the department",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the department",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/department"
                }
              }
            }
          },
          "404": {
            "description": "Department not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "Endpoints for user management in the health management system"
    },
    {
      "name": "Contact-us",
      "description": "Endpoints for sending and managing user messages"
    },
    {
      "name": "Department",
      "description": "All credentials required for departments in the hospital or clinic"
    }
  ],
  "definitions": {
    "signup": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "The first name of the user"
        },
        "lastName": {
          "type": "string",
          "description": "The last name of the user"
        },
        "email": {
          "type": "string",
          "description": "The email of the user",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "The phone number of the user"
        },
        "description": {
          "type": "string",
          "description": "A brief description about the user"
        },
        "password": {
          "type": "string",
          "description": "The password to be used for logging in"
        },
        "role": {
          "type": "string",
          "description": "Role of the user (e.g., doctor, nurse, receptionist, admin)",
          "enum": ["doctor", "nurse", "receptionist", "admin"]
        },
        "departmentId": {
          "type": "string",
          "description": "The ID of the department the user is associated with"
        }
      },
      "required": ["firstName", "lastName", "email", "phone", "password", "role"]
    },
    "login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email of the user",
          "format": "email"
        },
        "password": {
          "type": "string",
          "description": "The password to be used for logging in"
        }
      },
      "required": ["email", "password"]
    },
    "contact-us": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the user sending the message"
        },
        "email": {
          "type": "string",
          "description": "The email of the user sending the message",
          "format": "email"
        },
        "subject": {
          "type": "string",
          "description": "The subject of the message"
        },
        "message": {
          "type": "string",
          "description": "The message content"
        }
      },
      "required": ["name", "email", "subject", "message"]
    },
    "department": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true,
          "description": "The name of the department"
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "The explanation of this department"
        },
        "contact": {
          "type": "string",
          "required": true,
          "description": "The contact number of the department"
        },
        "email": {
          "type": "string",
          "required": true,
          "description": "The email address of the department"
        },
        "location": {
          "type": "string",
          "required": true,
          "description": "The physical location of the department"
        },
        "largeDescription": {
          "type": "string",
          "description": "Detailed description of the department"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "List of services offered by the department"
          },
          "required": true
        },
        "isActive": {
          "type": "boolean",
          "default": true,
          "description": "Indicates whether the department is active"
        }
      },
      "required": ["name", "description", "contact", "email", "location", "services"]
    }
  }
}
